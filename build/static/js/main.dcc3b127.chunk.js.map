{"version":3,"sources":["BooksAPI.js","Book.js","Books.js","BookShelf.js","ListBooks.js","SearchBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Book","onSelectShelf","_this","props","onChangeShelf","updateBook","BooksAPI","result","console","log","_this2","this","smallThumbnail","undefined","imageLinks","react_default","a","createElement","className","style","width","height","backgroundImage","onChange","event","target","value","disabled","title","authors","Component","Books","_this$props","map","key","src_Book","BookShelf","filteredBooks","filter","src_Books","ListBooks","shelves","onShowSearchPage","src_BookShelf","onClick","SearchBooks","state","searchBooks","setState","error","catch","type","placeholder","BooksApp","showSearchPage","onCloseSearchPage","changedBook","find","_ref","src_SearchBooks","src_ListBooks","React","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.dcc3b127.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react';\nimport * as BooksAPI from './BooksAPI'\n\nclass Book extends Component {\n\n    onSelectShelf = (shelf) => {\n        this.props.onChangeShelf(this.props.book, shelf);\n    }\n\n    updateBook = (book, shelf) => {\n        BooksAPI.update(book, shelf)\n            .then((result) => {\n                console.log(result);\n            })\n    }\n\n    render() {\n        const { book } = this.props;\n\n        const smallThumbnail = (book.imageLinks !== undefined && book.imageLinks.smallThumbnail !== undefined) ? book.imageLinks.smallThumbnail : ''\n\n        return (\n            <div className=\"book\">\n                <div className=\"book-top\">\n                    <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${smallThumbnail})` }}></div>\n                    <div className=\"book-shelf-changer\">\n                        <select onChange={(event) => this.onSelectShelf(event.target.value)}>\n                            <option value=\"move\" disabled>Move to...</option>\n                            <option value=\"currentlyReading\">Currently Reading</option>\n                            <option value=\"wantToRead\">Want to Read</option>\n                            <option value=\"read\">Read</option>\n                            <option value=\"none\">None</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"book-title\">{book.title}</div>\n                <div className=\"book-authors\">{book.authors}</div>\n            </div>\n        );\n    }\n}\n\nexport default Book;","import React, { Component } from 'react'\nimport Book from './Book.js'\n\nclass Books extends Component {\n\n    render() {\n        const { books, onChangeShelf } = this.props;\n\n        return (\n            <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                    {books.map((book) => (\n                        <li key={book.id}>\n                            <Book book={book} onChangeShelf={onChangeShelf}></Book>\n                        </li>\n                    ))}\n                </ol>\n            </div>\n        );\n    }\n}\n\nexport default Books","import React, { Component } from 'react';\nimport Books from './Books.js';\n\nclass BookShelf extends Component {\n    render() {\n\n        const { books, shelf, onChangeShelf } = this.props;\n        const filteredBooks = books.filter((book) => book.shelf === shelf.id)\n        return (\n            <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">{shelf.title}</h2>\n                <Books books={filteredBooks} onChangeShelf={onChangeShelf} ></Books>\n            </div>\n        );\n    }\n}\n\nexport default BookShelf;","import React, { Component } from 'react'\nimport BookShelf from './BookShelf'\n\nclass ListBooks extends Component {\n\n    shelves = [\n        { 'id': 'currentlyReading', 'title': 'Currently Reading' },\n        { 'id': 'wantToRead', 'title': 'Want to Read' },\n        { 'id': 'read', 'title': 'Read' },\n    ];\n\n    render() {\n        const { books, onShowSearchPage, onChangeShelf } = this.props;\n        return (\n            <div className=\"list-books\">\n                <div className=\"list-books-title\">\n                    <h1>MyReads</h1>\n                </div>\n                <div className=\"list-books-content\">\n                    <div>\n                        {this.shelves.map((shelf) => (\n                            <BookShelf key={shelf.id} books={books} shelf={shelf} onChangeShelf={onChangeShelf}></BookShelf>\n                        ))}\n                    </div>\n                </div>\n                <div className=\"open-search\">\n                    <button onClick={onShowSearchPage}>Add a book</button>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default ListBooks;","import React, { Component } from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport Books from './Books';\n\nclass SearchBooks extends Component {\n\n    state = {\n        books: [],\n        query: '',\n    }\n\n    searchBooks = (query) => {\n        this.setState({\n            query: query\n        }, () => {\n            if (query === '') {\n                this.setState(() => ({\n                    books: [],\n                }))\n                return\n            }\n\n            BooksAPI.search(query)\n                .then((books) => {\n\n                    if (books === undefined || books.error !== undefined) {\n                        return\n                    }\n                    this.setState(() => ({\n                        books: books,\n                    }))\n                }).catch((error) => {\n                    this.setState(() => ({\n                        books: [],\n                    }))\n                })\n        })\n    }\n\n    render() {\n        const { books } = this.state\n\n        return (\n            <div>\n                <div className=\"search-books\">\n                    <div className=\"search-books-bar\">\n                        <button className=\"close-search\">Close</button>\n                        <div className=\"search-books-input-wrapper\">\n                            <input\n                                type=\"text\"\n                                placeholder=\"Search by title or author\"\n                                value={this.state.query}\n                                onChange={(event) => this.searchBooks(event.target.value)} />\n                        </div>\n                    </div>\n                    <div className=\"search-books-results\">\n                        <ol className=\"books-grid\"></ol>\n                    </div>\n                </div>\n                <Books books={books} ></Books>\n            </div>\n        );\n    }\n}\n\nexport default SearchBooks","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport ListBooks from './ListBooks'\nimport SearchBooks from './SearchBooks'\n\nclass BooksApp extends React.Component {\n  state = {\n    books: [],\n    showSearchPage: false\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll()\n      .then((books) => {\n        this.setState(() => ({\n          books: books\n        }))\n      })\n  }\n\n  onShowSearchPage = () => {\n    this.setState(() => ({\n      showSearchPage: true\n    }))\n  }\n\n  onCloseSearchPage = () => {\n    this.setState(() => ({\n      showSearchPage: false\n    }))\n  }\n\n  onChangeShelf = (book, shelf) => {\n    const changedBook = this.state.books.find(({id}) => {\n      return book.id === id;\n    })\n    console.log(changedBook, shelf);\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        {this.state.showSearchPage ? (\n          <SearchBooks onCloseSearchPage={this.onCloseSearchPage}></SearchBooks>\n        ) : (\n            <ListBooks books={this.state.books} onShowSearchPage={this.onShowSearchPage} onChangeShelf={this.onChangeShelf}></ListBooks>\n          )}\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}